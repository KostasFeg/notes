[{"C:\\Users\\class\\Documents\\redux\\notes\\src\\index.js":"1","C:\\Users\\class\\Documents\\redux\\notes\\src\\App.js":"2","C:\\Users\\class\\Documents\\redux\\notes\\src\\store.js":"3","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\noteReducer.js":"4","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notes.js":"5","C:\\Users\\class\\Documents\\redux\\notes\\src\\services\\notes.js":"6","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Filter.js":"7","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Modal.js":"8","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\NoteCreate.js":"9","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notifications.js":"10","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\notificationReducer.js":"11","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\searchReducer.js":"12","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\filterReducer.js":"13"},{"size":268,"mtime":1607517398449,"results":"14","hashOfConfig":"15"},{"size":618,"mtime":1608712728654,"results":"16","hashOfConfig":"15"},{"size":679,"mtime":1612594873053,"results":"17","hashOfConfig":"15"},{"size":2285,"mtime":1609270317752,"results":"18","hashOfConfig":"15"},{"size":5349,"mtime":1612851144402,"results":"19","hashOfConfig":"15"},{"size":914,"mtime":1609228147730,"results":"20","hashOfConfig":"15"},{"size":1156,"mtime":1612594784490,"results":"21","hashOfConfig":"15"},{"size":581,"mtime":1608468062275,"results":"22","hashOfConfig":"15"},{"size":1783,"mtime":1609579966344,"results":"23","hashOfConfig":"15"},{"size":768,"mtime":1609314939920,"results":"24","hashOfConfig":"15"},{"size":701,"mtime":1608712499473,"results":"25","hashOfConfig":"15"},{"size":322,"mtime":1612594176662,"results":"26","hashOfConfig":"15"},{"size":321,"mtime":1612843809284,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11tuysk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\class\\Documents\\redux\\notes\\src\\index.js",[],["58","59"],"C:\\Users\\class\\Documents\\redux\\notes\\src\\App.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\store.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\noteReducer.js",["60","61"],"import noteService from '../services/notes';\r\nconst initialState = [];\r\n\r\nconst noteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT':\r\n      return action.data;\r\n    case 'CREATE':\r\n      return [...state, action.data];\r\n    case 'UPDATE':\r\n      const id = action.data.id;\r\n      const noteVoted = state.find((note) => note.id === id);\r\n\r\n      const updatedNote = { ...noteVoted, content: action.data.content };\r\n      return state.map((a) => (a.id === id ? updatedNote : a));\r\n    case 'DELETE':\r\n      return state.filter((note) => note.id !== action.data);\r\n    case 'TOGGLE_IMPORTANCE':\r\n      const idImportance = action.data;\r\n      console.log(idImportance);\r\n      const noteToChange = state.find((n) => n.id === idImportance);\r\n      const changedNote = {\r\n        ...noteToChange,\r\n        important: !noteToChange.important,\r\n      };\r\n      return state.map((note) =>\r\n        note.id !== idImportance ? note : changedNote\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createNote = (note, title) => {\r\n  return async (dispatch) => {\r\n    const newNote = await noteService.create(note, title);\r\n    dispatch({\r\n      type: 'CREATE',\r\n      data: newNote,\r\n    });\r\n  };\r\n};\r\n\r\nexport const initializeNotes = () => {\r\n  return async (dispatch) => {\r\n    const notes = await noteService.getAll();\r\n    dispatch({\r\n      type: 'INIT',\r\n      data: notes,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateNote = (note, newContent) => {\r\n  return async (dispatch) => {\r\n    const notetoBeUpdated = { ...note, content: newContent };\r\n    console.log(notetoBeUpdated);\r\n    const updatedNote = await noteService.update(notetoBeUpdated);\r\n    console.log(note);\r\n    dispatch({\r\n      type: 'UPDATE',\r\n      data: updatedNote,\r\n    });\r\n  };\r\n};\r\n\r\nexport const delNote = (note) => {\r\n  return async (dispatch) => {\r\n    const noteToBeDeleted = await noteService.deletion(note);\r\n    dispatch({\r\n      type: 'DELETE',\r\n      data: note.id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const toggleImportanceOf = (note) => {\r\n  return async (dispatch) => {\r\n    const notToChangeImportance = await noteService.changeImportance(note);\r\n\r\n    dispatch({ type: 'TOGGLE_IMPORTANCE', data: note.id });\r\n  };\r\n};\r\n\r\nexport default noteReducer;\r\n","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notes.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\services\\notes.js",["62","63"],"import axios from 'axios';\r\nconst baseUrl = ' http://localhost:3001/notes';\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (content, title) => {\r\n  const noteToCreate = { content, title, important: false };\r\n  const response = await axios.post(baseUrl, noteToCreate);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (note) => {\r\n  const response = await axios.put(`${baseUrl}/${note.id}`, note);\r\n  return response.data;\r\n};\r\n\r\nconst deletion = async (note) => {\r\n  const response = await axios.delete(`${baseUrl}/${note.id}`);\r\n  return response.data;\r\n};\r\n\r\nconst changeImportance = async (note) => {\r\n  const response = await axios.put(`${baseUrl}/${note.id}`, {\r\n    ...note,\r\n    important: !note.important,\r\n  });\r\n};\r\n\r\nexport default { getAll, update, create, deletion, changeImportance };\r\n","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Filter.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Modal.js",[],["64","65"],"C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\NoteCreate.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notifications.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\notificationReducer.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\searchReducer.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\filterReducer.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":70,"column":11,"nodeType":"72","messageId":"73","endLine":70,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":80,"column":11,"nodeType":"72","messageId":"73","endLine":80,"endColumn":32},{"ruleId":"70","severity":1,"message":"75","line":27,"column":9,"nodeType":"72","messageId":"73","endLine":27,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":33,"column":1,"nodeType":"78","endLine":33,"endColumn":71},{"ruleId":"66","replacedBy":"79"},{"ruleId":"68","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'noteToBeDeleted' is assigned a value but never used.","Identifier","unusedVar","'notToChangeImportance' is assigned a value but never used.","'response' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["81"],["82"],"no-global-assign","no-unsafe-negation"]