[{"C:\\Users\\class\\Documents\\redux\\notes\\src\\index.js":"1","C:\\Users\\class\\Documents\\redux\\notes\\src\\App.js":"2","C:\\Users\\class\\Documents\\redux\\notes\\src\\store.js":"3","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\noteReducer.js":"4","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notes.js":"5","C:\\Users\\class\\Documents\\redux\\notes\\src\\services\\notes.js":"6","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Filter.js":"7","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Modal.js":"8","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\NoteCreate.js":"9","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notifications.js":"10","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\notificationReducer.js":"11","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\searchReducer.js":"12","C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\filterReducer.js":"13"},{"size":290,"mtime":1617317499700,"results":"14","hashOfConfig":"15"},{"size":590,"mtime":1617318701068,"results":"16","hashOfConfig":"15"},{"size":679,"mtime":1612594873053,"results":"17","hashOfConfig":"15"},{"size":3241,"mtime":1617348987517,"results":"18","hashOfConfig":"15"},{"size":8944,"mtime":1617353318493,"results":"19","hashOfConfig":"15"},{"size":1128,"mtime":1616934324383,"results":"20","hashOfConfig":"15"},{"size":1972,"mtime":1617337059949,"results":"21","hashOfConfig":"15"},{"size":581,"mtime":1608468062275,"results":"22","hashOfConfig":"23"},{"size":1593,"mtime":1617321393304,"results":"24","hashOfConfig":"15"},{"size":768,"mtime":1609314939920,"results":"25","hashOfConfig":"15"},{"size":701,"mtime":1608712499473,"results":"26","hashOfConfig":"15"},{"size":322,"mtime":1612594176662,"results":"27","hashOfConfig":"15"},{"size":321,"mtime":1612843809284,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"124xj6w",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"11tuysk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\class\\Documents\\redux\\notes\\src\\index.js",[],["59","60"],"C:\\Users\\class\\Documents\\redux\\notes\\src\\App.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\store.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\noteReducer.js",["61","62"],"import noteService from '../services/notes';\r\nconst initialState = [];\r\n\r\nconst noteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT':\r\n      return action.data;\r\n    case 'CREATE':\r\n      return [...state, action.data];\r\n    case 'UPDATE':\r\n      const id = action.data.id;\r\n      const noteVoted = state.find((note) => note.id === id);\r\n\r\n      const updatedNote = { ...noteVoted, content: action.data.content };\r\n      return state.map((a) => (a.id === id ? updatedNote : a));\r\n    case 'DELETE':\r\n      return state.filter((note) => note.id !== action.data);\r\n    case 'TOGGLE_IMPORTANCE':\r\n      const idImportance = action.data;\r\n      console.log(idImportance);\r\n      const noteToChange = state.find((n) => n.id === idImportance);\r\n      const changedNote = {\r\n        ...noteToChange,\r\n        important: !noteToChange.important,\r\n      };\r\n      return state.map((note) =>\r\n        note.id !== idImportance ? note : changedNote\r\n      );\r\n    case 'ADD_HASHTAG':\r\n      const idOfAddedHashtagNote = action.data.id;\r\n      console.log(state);\r\n      const noteToAddHashtag = state.find(\r\n        (note) => note.id === idOfAddedHashtagNote\r\n      );\r\n\r\n      const noteWithHashTag = {\r\n        ...noteToAddHashtag,\r\n        hashtags: action.data.hashtags,\r\n      };\r\n\r\n      return state.map((a) =>\r\n        a.id === idOfAddedHashtagNote ? noteWithHashTag : a\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createNote = (note, title) => {\r\n  return async (dispatch) => {\r\n    const newNote = await noteService.create(note, title);\r\n    dispatch({\r\n      type: 'CREATE',\r\n      data: newNote,\r\n    });\r\n  };\r\n};\r\n\r\nexport const initializeNotes = () => {\r\n  return async (dispatch) => {\r\n    const notes = await noteService.getAll();\r\n    dispatch({\r\n      type: 'INIT',\r\n      data: notes,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateNote = (note, newContent) => {\r\n  return async (dispatch) => {\r\n    const notetoBeUpdated = { ...note, content: newContent };\r\n    console.log(notetoBeUpdated);\r\n\r\n    const updatedNote = await noteService.update(notetoBeUpdated);\r\n    console.log(note);\r\n    dispatch({\r\n      type: 'UPDATE',\r\n      data: updatedNote,\r\n    });\r\n  };\r\n};\r\n\r\nexport const delNote = (note) => {\r\n  return async (dispatch) => {\r\n    const noteToBeDeleted = await noteService.deletion(note);\r\n    dispatch({\r\n      type: 'DELETE',\r\n      data: note.id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const toggleImportanceOf = (note) => {\r\n  return async (dispatch) => {\r\n    const notToChangeImportance = await noteService.changeImportance(note);\r\n\r\n    dispatch({ type: 'TOGGLE_IMPORTANCE', data: note.id });\r\n  };\r\n};\r\n\r\nexport const addHashtag = (note, hashtag) => {\r\n  console.log(note);\r\n  console.log(hashtag);\r\n  return async (dispatch) => {\r\n    const newHashtags = note.hashtags.concat(hashtag);\r\n    console.log(`New: ${newHashtags}`);\r\n    const noteWithHashtagToBeUpdated = { ...note, hashtags: newHashtags };\r\n    console.log(noteWithHashtagToBeUpdated);\r\n\r\n    const noteWithHashtag = await noteService.addHashtag(\r\n      noteWithHashtagToBeUpdated\r\n    );\r\n\r\n    dispatch({ type: 'ADD_HASHTAG', data: noteWithHashtag });\r\n  };\r\n};\r\n\r\nexport default noteReducer;\r\n","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notes.js",["63"],"C:\\Users\\class\\Documents\\redux\\notes\\src\\services\\notes.js",["64","65"],"import axios from 'axios';\r\nconst baseUrl = ' http://localhost:3001/notes';\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (content, title) => {\r\n  const noteToCreate = { content, title, important: false, hashtags: [] };\r\n  const response = await axios.post(baseUrl, noteToCreate);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (note) => {\r\n  const response = await axios.put(`${baseUrl}/${note.id}`, note);\r\n  return response.data;\r\n};\r\n\r\nconst deletion = async (note) => {\r\n  const response = await axios.delete(`${baseUrl}/${note.id}`);\r\n  return response.data;\r\n};\r\n\r\nconst changeImportance = async (note) => {\r\n  const response = await axios.put(`${baseUrl}/${note.id}`, {\r\n    ...note,\r\n    important: !note.important,\r\n  });\r\n};\r\n\r\nconst addHashtag = async (note) => {\r\n  const response = await axios.put(`${baseUrl}/${note.id}`, note);\r\n  console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  update,\r\n  create,\r\n  deletion,\r\n  changeImportance,\r\n  addHashtag,\r\n};\r\n","C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Filter.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Modal.js",[],["66","67"],"C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\NoteCreate.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\components\\Notifications.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\notificationReducer.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\searchReducer.js",[],"C:\\Users\\class\\Documents\\redux\\notes\\src\\reducers\\filterReducer.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":85,"column":11,"nodeType":"74","messageId":"75","endLine":85,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":95,"column":11,"nodeType":"74","messageId":"75","endLine":95,"endColumn":32},{"ruleId":"72","severity":1,"message":"77","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"78","line":27,"column":9,"nodeType":"74","messageId":"75","endLine":27,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":39,"column":1,"nodeType":"81","endLine":46,"endColumn":3},{"ruleId":"68","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'noteToBeDeleted' is assigned a value but never used.","Identifier","unusedVar","'notToChangeImportance' is assigned a value but never used.","'useEffect' is defined but never used.","'response' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["84"],["85"],"no-global-assign","no-unsafe-negation"]